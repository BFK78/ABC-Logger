apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.objectbox'

android {
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    dataBinding {
        enabled = true
    }

    dexOptions {
        maxProcessCount 6
        javaMaxHeapSize "2g"
    }

    compileSdkVersion 29
    buildToolsVersion = '29.0.2'

    defaultConfig {
        applicationId 'kaist.iclab.abclogger'
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 14
        versionName "0.9.6-d"
        setProperty('archivesBaseName', applicationId + "-v" + versionName)
        buildConfigField("String", "DB_NAME", "\"abc-logger\"")
        buildConfigField("String", "PREF_NAME", "\"abc-logger-pref\"")
        buildConfigField("Long", "DB_MAX_SIZE", "3145728L")
        buildConfigField("String", "SERVER_ADDRESS", "\"143.248.100.24:50052\"")
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        main.proto.srcDirs += 'grpc'
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.aar'], dir: 'libs')

    /**
     * Kotlin
     */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.61"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.61"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    /**
     * Koin for dependency injection
     */
    implementation "org.koin:koin-core:2.0.1"
    implementation "org.koin:koin-android:2.0.1"
    implementation "org.koin:koin-androidx-viewmodel:2.0.1"

    /**
     * Eventbus for delivering events
     */
    implementation 'org.greenrobot:eventbus:3.1.1'

    /**
     * Firebase
     */
    implementation "com.google.firebase:firebase-core:17.2.2"
    implementation "com.google.firebase:firebase-auth:19.2.0"
    implementation 'com.google.firebase:firebase-analytics:17.2.2'
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0-beta01'

    /**
     * Android X Support libraries
     */
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.fragment:fragment-ktx:1.2.0'
    implementation 'androidx.preference:preference-ktx:1.1.0'
    implementation "androidx.paging:paging-common-ktx:2.1.1"
    implementation 'androidx.paging:paging-runtime-ktx:2.1.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation "androidx.lifecycle:lifecycle-livedata-core-ktx:2.2.0"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0'
    implementation 'androidx.work:work-runtime-ktx:2.3.0'
    implementation "androidx.navigation:navigation-fragment-ktx:2.2.1"
    implementation "androidx.navigation:navigation-ui-ktx:2.2.1"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.media:media:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'

    /**
     * Google GMS libraries for login, location, and fitness data retrieval
     */
    implementation "com.google.android.gms:play-services-auth:17.0.0"
    implementation "com.google.android.gms:play-services-location:17.0.0"
    implementation "com.google.android.gms:play-services-fitness:18.0.0"

    /**
     * Tedpermission to grant simply users' permission
     */
    implementation "gun0912.ted:tedpermission-rx2:2.2.3"

    /**
     * Koap for easy-to-use of shared preferences
     */
    implementation 'com.github.AgustaRC.koap:koap:1.0.1'
    implementation "com.github.AgustaRC.koap:koap-gson-serializer:1.0.1"
    implementation "com.google.code.gson:gson:2.8.6"

    /**
     * Objectbox for android database
     */
    implementation "io.objectbox:objectbox-kotlin:2.3.4"

    /**
     * Seekbar with bubble
     */
    implementation 'com.github.techery.progresshint:library-addition:0.4.1'

    /**
     * Moshi for jsonifing object
     */
    implementation "com.squareup.moshi:moshi:1.9.2"
    implementation "com.squareup.moshi:moshi-kotlin:1.9.2"
    implementation "com.squareup.moshi:moshi-adapters:1.9.2"

    /**
     * Fuel for http connection
     */
    implementation 'com.github.kittinunf.fuel:fuel:2.2.1'
    implementation 'com.github.kittinunf.fuel:fuel-android:2.2.1'
    implementation 'com.github.kittinunf.fuel:fuel-coroutines:2.2.1'

    /**
     * rxJava 3.0.0 for reactive pattern
     */
    implementation 'io.reactivex.rxjava3:rxjava:3.0.0-RC8'

    /**
     * gRPC
     */
    implementation 'io.grpc:grpc-okhttp:1.26.0'
    implementation 'io.grpc:grpc-protobuf-lite:1.26.0'
    implementation 'io.grpc:grpc-stub:1.26.0'
    implementation 'io.grpc:grpc-android:1.26.0'
    implementation "com.github.marcoferrer.krotoplus:kroto-plus-coroutines:0.6.0"

    /**
     * Other utils
     */
    implementation 'commons-io:commons-io:2.6'
}


protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.11.1'
    }

    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.26.0'
        }
        kroto {
            artifact = "com.github.marcoferrer.krotoplus:protoc-gen-grpc-coroutines:0.6.0"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
            task.plugins {
                grpc {
                    option 'lite'
                }
                kroto { }
            }
        }
    }
}
